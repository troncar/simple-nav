{"version":3,"sources":["logo.svg","commons/Logo.jsx","commons/Menu.jsx","commons/MenuMobile.jsx","commons/Item.jsx","utils/utils.js","navbar/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","props","className","src","logo","alt","Menu","Fragment","buildItems","items","onClick","handlerClickMenuMobile","MenuMobile","display","Item","type","position","customClass","action","name","url","handler","label","ITEMS","ITEMS_MOBILE","NavBar","event","setState","openMenuMobile","state","stopPropagation","handlerClick","target","getAttribute","window","open","console","log","isEmpty","obj","key","hasOwnProperty","checkHandlerEmpty","map","item","index","this","Component","defaultProps","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a956658c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from '../logo.svg';\nimport './Logo.scss';\n\n\nconst Logo = (props) => {\n    return (  \n        <div className=\"logo__container\">\n            <img className=\"logo__img\" src={logo} alt=\"Logo\"/>\n        </div>);\n}\n \nexport default Logo;","import React  from 'react';\n\n\n\nimport \"./Menu.scss\";\n\nconst Menu = (props) => {\n\n  return (\n    <React.Fragment>\n      <div className=\"menu__container--md\">\n      <div className=\"menu__items--md\">\n       {props.buildItems(props.items)}\n      </div>\n    </div>\n    <div className=\"menu__container--sm\">\n      <div className=\"button-hm\" onClick={props.handlerClickMenuMobile}>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </div>\n  </React.Fragment>\n  );\n}\n\nexport default Menu;\n","import React  from 'react';\nimport \"./MenuMobile.scss\";\n\n\nconst MenuMobile = (props) => {\n\n  return(\n\n    <div className= {`menu__mobile ${props.display ? 'show' : 'hidden'}`}>\n       {props.buildItems(props.items)}\n    </div>\n  )\n}\n\nexport default MenuMobile;\n","import React from 'react';\nimport './Item.scss';\n\nconst Item = (props) => {\n    return (\n    <div className={`item item--${props.type} item--${props.position} ${props.customClass ? props.customClass : ''}`} action={props.action} name={props.name} url={props.url} onClick={props.handler}>{props.label}</div>);\n}\n\nexport default Item;\n","export const ITEMS = [{\n    type: 'first',\n    label: 'About us',\n    position: 'right',\n    handler:()=>{},\n    name:'about-us',\n    action:'redirect',\n    url:'https://www.youtube.com.mx/'\n    },\n    {\n      type: 'first',\n      label: 'Login',\n      position: 'right',\n      handler:()=>{},\n      name:'login',\n      action:'redirect',\n      url:'/login'\n    },\n    {\n      type: 'secondary',\n      label: 'Contact us',\n      position: 'right',\n      handler:()=>{},\n      name:'contact-us',\n      action:'redirect',\n      url:'/contact'\n    }\n  ];\n\nexport const ITEMS_MOBILE = [{\n  type: 'first',\n  label: 'About us',\n  position: 'right',\n  handler:()=>{},\n  name:'about-us',\n  action:'redirect',\n  url:'https://www.youtube.com.mx/' ,\n  customClass: 'item--mobile'\n  },\n  {\n    type: 'first',\n    label: 'Login',\n    position: 'right',\n    handler:()=>{},\n    name:'login',\n    action:'redirect',\n    url:'/login',\n    customClass: 'item--mobile'\n  },\n  {\n    type: 'secondary',\n    label: 'Contact us',\n    position: 'right',\n    handler:()=>{},\n    name:'contact-us',\n    action:'redirect',\n    url:'/contact' ,\n    customClass: 'item--mobile'\n  }\n];\n\n","import React, { Component } from 'react';\nimport Logo from '../commons/Logo.jsx';\nimport Menu from '../commons/Menu.jsx';\nimport MenuMobile from '../commons/MenuMobile.jsx';\nimport Item  from '../commons/Item.jsx';\nimport { ITEMS, ITEMS_MOBILE }  from '../utils/utils';\n\nimport \"./NavBar.scss\";\n\n\nclass NavBar extends Component {\n\n    constructor(props){\n      super(props)\n      this.state = {\n        openMenuMobile: false,\n      };\n    }\n\n\n    handlerClickMenuMobile = (event) => {\n      this.setState({openMenuMobile: !this.state.openMenuMobile})\n      event.stopPropagation();\n    }\n\n\n    handlerClick = (event) => {\n      switch (event.target.getAttribute('action')) {\n        case 'redirect':\n            window.open(event.target.getAttribute('url'), '_blank');\n          break;\n        default:\n          console.log('No action pass')\n          break;\n      }\n    }\n\n  isEmpty =  (obj)  =>{\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n  }\n\n  checkHandlerEmpty = (items) => {\n      return items.map( item => {\n          if(this.isEmpty(item.handler)){\n            item.handler = this.handlerClick;\n          }\n          return item;\n      })\n  }\n\n\n    buildItems = (items) => {\n      if(!!items){\n        return items.map((item, index) => (\n          <Item\n            key={`${index}--${item.name}`}\n            type= {item.type}\n            label={item.label}\n            position={item.position}\n            handler={item.handler}\n            name={item.name}\n            customClass = {item.customClass ? item.customClass : ''}\n            action={item.action}\n            url={item.url}\n          />\n        ))\n      }\n    }\n\n    render() {\n\n        return (\n          <div>\n              <div className=\"navbar\">\n                  <div className=\"navbar__container\">\n                      <Logo></Logo>\n                      <div className=\"menu__wrapper\">\n                          <Menu\n                            items={this.checkHandlerEmpty(ITEMS)}\n                            buildItems={this.buildItems}\n                            handlerClickMenuMobile={this.handlerClickMenuMobile}\n                            />\n                      </div>\n                  </div>\n              </div>\n              <MenuMobile\n                items={this.checkHandlerEmpty(ITEMS_MOBILE)}\n                buildItems={this.buildItems}\n                display={this.state.openMenuMobile}\n                />\n          </div>\n        );\n    }\n}\n\nNavBar.defaultProps = {\n  items:[{type: 'first', label: 'About us', position: 'right', handler:()=>{}, name:'about-us',action:'redirect', url:'https://www.youtube.com.mx/' },\n        {type: 'first', label: 'Login', position: 'right', handler:()=>{}, name:'login',action:'redirect', url:'/login' },\n        {type: 'secondary', label: 'Contact us', position: 'right', handler:()=>{}, name:'contact-us',action:'redirect', url:'/contact' }]\n}\n\n\nexport default NavBar;\n","import React from 'react';\nimport './App.css';\nimport  Navbar from './navbar/NavBar.jsx'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar></Navbar>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}